[general]
# Log level
#
# debug=5, info=4, warning=3, error=2, fatal=1, panic=0
log_level=5


# Application Server configuration.
[application_server]

  # API configuration.
  #
  # This configuration is used to automatically create the:
  #   * Device profile
  #   * Gateways
  #   * Application
  #   * Devices
  [application_server.api]

  # JWT token.
  #
  # The JWT token to connect to the ChirpStack Application Server API. This
  # token can be generated using the login API endpoint. In the near-future
  # it will be possible to generate these tokens within the web-interface:
  # https://github.com/brocaar/chirpstack-application-server/pull/421
  jwt_token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5X2lkIjoiNTVhZjdjZTctMWYwMC00YjE2LTg2MTAtYTZlOTllMmI1NGUzIiwiYXVkIjoiYXMiLCJpc3MiOiJhcyIsIm5iZiI6MTU4OTUzNTIzNywic3ViIjoiYXBpX2tleSJ9.aTADtJHX5kChMqFOnORmHXnDvM6Zmh0xT9wsqEhJEMc"
  
  # Server.
  #
  # This must point to the external API server of the ChirpStack Application
  # Server. When the server is running on the same machine, keep this to the
  # default value.
  server="192.168.0.175:8080"

  # Insecure.
  #
  # Set this to true when the endpoint is not using TLS.
  insecure=true

  # MQTT integration configuration.
  #
  # This integration is used for counting the number of uplinks that are
  # published by the ChirpStack Application Server integration.
  [application_server.integration.mqtt]

  # MQTT server.
  server="tcp://192.168.0.175:1883"

  # Username.
  username=""

  # Password.
  password=""


# Network Server configuration.
#
# This configuration is used to simulate LoRa gateways using the MQTT gateway
# backend.
[network_server]

  # MQTT gateway backend.
  [network_server.gateway.backend.mqtt]

  # MQTT server.
  server="tcp://192.168.0.175:1883"

  # Username.
  username=""

  # Password.
  password=""


# Simulator configuration.
[[simulator]]

# Service-profile ID.
#
# It is recommended to create a new organization with a new service-profile
# in the ChirpStack Application Server.
service_profile_id="0406830f-e48e-46a9-ba23-6de713a177be"

# Duration.
#
# This defines the duration of the simulation. If set to '0s', the simulation
# will run until terminated.
duration="5m"

  # Device configuration.
  [simulator.device]

  # Number of devices to simulate.
  count=10000

  # Uplink interval.
  uplink_interval="1s"

  # FPort.
  f_port=10

  # Payload (HEX encoded).
  payload="010203"

  # Frequency (Hz).
  frequency=868100000

  # Bandwidth (Hz).
  bandwidth=125000

  # Spreading-factor.
  spreading_factor=7

  # Gateway configuration.
  [simulator.gateway]

  # Min number of receiving gateways.
  min_count=1

  # Max number of receiving gateways.
  max_count=2

  # Event topic template.
  event_topic_template="gateway/{{ .GatewayID }}/event/{{ .Event }}"

  # Command topic template.
  command_topic_template="gateway/{{ .GatewayID }}/command/{{ .Command }}"


# Prometheus metrics configuration.
#
# Using Prometheus (and Grafana), it is possible to visualize various
# simulation metrics like:
#   * Join-Requests sent
#   * Join-Accepts received
#   * Uplinks sent (by the devices)
#   * Uplinks sent (by the gateways)
#   * Uplinks sent (by the ChirpStack Application Server MQTT integration)
[prometheus]

# IP:port to bind the Prometheus endpoint to.
#
# Metrics can be retrieved from /metrics.
bind="0.0.0.0:9099"
